// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
enum UserRole {
  NORMAL
  ADMIN
  EMPLOYEE
}

enum UserStatus {
  AVAILABLE
  DISABLE
}

enum RoomStatus {
  AVAILABLE
  UNAVAILABLE
  MAINTENANCE
}

enum MovieStatus {
  TO_SHOW
  SHOWING
  STOP_SHOWING
  UNAVAILABLE
}
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  username String     @db.VarChar(255)
  password String     @db.VarChar(255)
  email    String     @unique @db.VarChar(255)
  status   UserStatus
  role     UserRole
  token    String? 
  token_lifetime DateTime?  
  tickets  Ticket[]   
}

model Room {
  id          Int        @id @default(autoincrement())
  calendar_id Int?        //@db.Int()
  calendar    Calendar?   @relation(fields: [calendar_id], references: [id])
  status RoomStatus
  capacity Int        @db.Int()
  tickets     Ticket[]   
  freeSits    Int        @db.Int() @default(0)
}

model Movie {
  id          Int        @id @default(autoincrement())
  title       String     @db.VarChar(255)
  description String     @db.VarChar(255)
  duration    Int      @db.Int()
  calendar_id Int?        //@db.Int()
  calendar    Calendar?   @relation(fields: [calendar_id], references: [id])
  status MovieStatus
  tickets     Ticket[]   
}

model Calendar {
  id       Int        @id @default(autoincrement())
  date     DateTime   @db.DateTime() 
  time     DateTime   @db.DateTime() 
  rooms    Room[]     
  movies   Movie[]    
}

model Ticket {
  id       Int    @id @default(autoincrement())
  movie_id Int    @db.Int()
  room_id  Int    @db.Int()
  user_id  Int    @db.Int()
  movie    Movie  @relation(fields: [movie_id], references: [id])
  room     Room   @relation(fields: [room_id], references: [id])
  user     User   @relation(fields: [user_id], references: [id])
}
